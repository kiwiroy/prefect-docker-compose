# This file is inspired from https://github.com/PrefectHQ/prefect/blob/master/src/prefect/cli/docker-compose.yml to remain compatible with the official repository's file
version: "3.7"

services:

  postgres:
    image: "postgres:11"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_VOLUME_NAME: ${POSTGRES_VOLUME_NAME}
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - prefect-server
    restart: "always"
    command:
      - "postgres"
      - "-c"
      - "max_connections=150"
    
  hasura:
    image: "hasura/graphql-engine:v1.3.0"
    command: "graphql-engine serve"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: ${DB_CONNECTION_URL}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_SERVER_PORT: "3000"
      HASURA_GRAPHQL_QUERY_PLAN_CACHE_SIZE: 100
      HASURA_GRAPHQL_LOG_LEVEL: "warn"
    networks:
      - prefect-server
    restart: "always"
    depends_on:
      - postgres
  
  graphql:
    image: "prefecthq/server:${PREFECT_SERVER_TAG:-latest}"
    command: bash -c "${PREFECT_SERVER_DB_CMD} && python src/prefect_server/services/graphql/server.py"
    environment:
      PREFECT_SERVER_DB_CMD: ${PREFECT_SERVER_DB_CMD:-"echo 'DATABASE MIGRATIONS SKIPPED'"}
      PREFECT_SERVER__DATABASE__CONNECTION_URL: ${DB_CONNECTION_URL}
      PREFECT_SERVER__HASURA__ADMIN_SECRET: ${PREFECT_SERVER__HASURA__ADMIN_SECRET:-hasura-secret-admin-secret}
      PREFECT_SERVER__HASURA__HOST: hasura
    networks:
      - prefect-server
    restart: "always"
    depends_on:
      - hasura
  
  towel:
    image: "prefecthq/server:${PREFECT_SERVER_TAG:-latest}"
    command: "python src/prefect_server/services/towel/__main__.py"
    environment:
      PREFECT_SERVER__HASURA__ADMIN_SECRET: ${PREFECT_SERVER__HASURA__ADMIN_SECRET:-hasura-secret-admin-secret}
      PREFECT_SERVER__HASURA__HOST: hasura
    networks:
      - prefect-server
    restart: "always"
    depends_on:
      - graphql
  
  apollo:
    image: "prefecthq/apollo:${PREFECT_SERVER_TAG:-latest}"
    ports:
      - "${PREFECT_SERVER__APOLLO_PORT}:4200"
    command: bash -c "./post-start.sh && npm run serve"
    environment:
      HASURA_API_URL: http://hasura:3000/v1alpha1/graphql
      PREFECT_API_URL: http://graphql:4201/graphql/
      PREFECT_API_HEALTH_URL: http://graphql:4201/health
      PREFECT_SERVER__TELEMETRY__ENABLED: "false"
      GRAPHQL_SERVICE_HOST: http://graphql
      GRAPHQL_SERVICE_PORT: 4201
    healthcheck:
      test: curl --fail --silent "http://apollo:4200/.well-known/apollo/server-health" &> /dev/null || exit 1
      interval: 10s
      timeout: 2s
      retries: 60
      start_period: 1s
    networks:
      - prefect-server
    restart: "always"
    depends_on:
      - graphql
      - hasura
  
  ui:
    image: "prefecthq/ui:${PREFECT_UI_TAG:-latest}"
    ports:
      - "${PREFECT_SERVER_UI_EXPORT_PORT:-8080}:8080"
    command: "/intercept.sh"
    environment:
      PREFECT_SERVER__APOLLO_URL: http://${PREFECT_SERVER__APOLLO_HOST:-apollo}:${PREFECT_SERVER__APOLLO_PORT:-4200}/graphql
      PREFECT_SERVER_UI_EXPORT_PORT: ${PREFECT_SERVER_UI_EXPORT_PORT:-8080}
    networks:
      - prefect-server
    restart: "always"
    depends_on:
      - apollo

volumes:
  postgres:
    external: true
    name: ${POSTGRES_VOLUME_NAME}

networks:
  prefect-server:
    name: prefect-server
